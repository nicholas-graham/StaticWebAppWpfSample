---
interface Props {
    text: string;
    functionType: string;
}

const { text, functionType } = Astro.props;
---

<function-button data-functionName={functionType}>
    <button class="astro-button">
        <h2>
            {text}
        </h2>
    </button>
</function-button>

<script>
    import { GetFunctionByName } from "../scripts/webView2Interop";
    class Button extends HTMLElement {
        constructor() {
            super();

            const functionName = this.dataset.functionname;
            if (!functionName) return;

            const button = this.querySelector("button");
            button?.addEventListener("click", GetFunctionByName(functionName));
        }
    }

    customElements.define("function-button", Button);
</script>
<style>
    .astro-button {
        list-style: none;
        display: flex;
        background-color: #23262d;
        background-image: none;
        background-size: 400%;
        border-radius: 7px;
        background-position: 100%;
        transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
        width: 100%;
        text-decoration: none;
        line-height: 1.4;
        padding: calc(1.5rem - 1px);
        border-radius: 8px;
        color: white;
        background-color: #23262d;
        opacity: 0.8;
    }
    h2 {
        margin: 0;
        font-size: 1.25rem;
        transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    }
    .astro-button:is(:hover, :focus-within) {
        background-position: 0;
        background-image: var(--accent-gradient);
    }
    .astro-button:is(:hover, :focus-within) h2 {
        color: rgb(var(--accent-light));
    }
</style>
